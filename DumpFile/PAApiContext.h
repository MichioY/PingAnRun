//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSDictionary, NSString, PAX509Credential;

@interface PAApiContext : NSObject
{
    NSDictionary *_certificate;
    NSString *_sigAlgName;
    NSString *_token;
    NSString *_deviceId;
    NSString *_appid;
    NSString *_location;
    NSString *_deviceInfo;
    long long _vercode;
    NSString *_phoneNumber;
    NSString *_dynamic;
    long long _userId;
    long long _tokenExpireTime;
    NSString *_deviceToken;
    PAX509Credential *_x509certificate;
}

@property(retain, nonatomic) PAX509Credential *x509certificate; // @synthesize x509certificate=_x509certificate;
@property(retain, nonatomic) NSString *deviceToken; // @synthesize deviceToken=_deviceToken;
@property(nonatomic) long long tokenExpireTime; // @synthesize tokenExpireTime=_tokenExpireTime;
@property(nonatomic) long long userId; // @synthesize userId=_userId;
@property(nonatomic) long long vercode; // @synthesize vercode=_vercode;
@property(retain, nonatomic) NSString *deviceInfo; // @synthesize deviceInfo=_deviceInfo;
@property(retain, nonatomic) NSString *location; // @synthesize location=_location;
@property(retain, nonatomic) NSString *appid; // @synthesize appid=_appid;
@property(retain, nonatomic) NSString *deviceId; // @synthesize deviceId=_deviceId;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (void)setPhoneNumber:(id)arg1 withDynamic:(id)arg2;
- (void)fillErrorWithRequest:(id)arg1 error:(id)arg2;
- (void)fillErrorWithRequests:(id)arg1 code:(long long)arg2;
- (void)fillErrorWithRequest:(id)arg1 code:(long long)arg2;
- (id)certEncoded;
- (id)fillResponseWithRequest:(id)arg1 dictionary:(id)arg2;
- (id)fillResponseWithRequest:(id)arg1 data:(id)arg2;
- (id)parameterStringInternalWithDictionary:(id)arg1 SecurityType:(long long)arg2;
- (id)parameterStringWithArray:(id)arg1;
- (id)parameterStringWithRequest:(id)arg1;
- (void)setCertificate:(id)arg1;
- (void)setCertificateWithData:(id)arg1 deviceToken:(id)arg2;
- (void)setCertificateWithPath:(id)arg1 deviceToken:(id)arg2;
- (id)initWithAppid:(id)arg1 vercode:(long long)arg2;

@end

